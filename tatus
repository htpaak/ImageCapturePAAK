[1mdiff --git a/__pycache__/gui_module.cpython-310.pyc b/__pycache__/gui_module.cpython-310.pyc[m
[1mindex 6a229db..9301c49 100644[m
Binary files a/__pycache__/gui_module.cpython-310.pyc and b/__pycache__/gui_module.cpython-310.pyc differ
[1mdiff --git a/gui_module.py b/gui_module.py[m
[1mindex 020213a..530a9c8 100644[m
[1m--- a/gui_module.py[m
[1m+++ b/gui_module.py[m
[36m@@ -7,7 +7,7 @@[m [mfrom PyQt5.QtWidgets import (QApplication, QMainWindow, QPushButton, QVBoxLayout[m
                            QFrame, QSizePolicy, QToolTip, QStatusBar, QDesktopWidget,[m
                            QShortcut, QDialog, QListWidget, QListWidgetItem, QAbstractItemView)[m
 from PyQt5.QtGui import QPixmap, QIcon, QPainter, QPainterPath, QPen, QColor, QBrush, QFont, QKeySequence, QCursor[m
[31m-from PyQt5.QtCore import Qt, QRect, QPoint, QRectF, QSize, QTimer[m
[32m+[m[32mfrom PyQt5.QtCore import Qt, QRect, QPoint, QRectF, QSize, QTimer, QEvent[m
 import win32gui[m
 import win32con[m
 [m
[36m@@ -182,7 +182,7 @@[m [mclass CaptureUI(QMainWindow):[m
         preview_frame.setMinimumHeight(360)  # 16:9 비율에 맞게 설정[m
         [m
         # 프레임 크기 정책 설정 - Preferred로 설정해서 레이아웃 내에서는 크기 유지[m
[31m-        sizePolicy = QSizePolicy(QSizePolicy.Preferred, QSizePolicy.Preferred)[m
[32m+[m[32m        sizePolicy = QSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)[m
         sizePolicy.setHeightForWidth(True)  # 너비에 따라 높이 비율 유지[m
         preview_frame.setSizePolicy(sizePolicy)[m
         [m
[36m@@ -192,20 +192,26 @@[m [mclass CaptureUI(QMainWindow):[m
             [m
         preview_frame.heightForWidth = height_for_width[m
         [m
[32m+[m[32m        # 프레임 레이아웃 설정 - 여백 제거[m
         preview_layout = QVBoxLayout(preview_frame)[m
[32m+[m[32m        preview_layout.setContentsMargins(0, 0, 0, 0)  # 여백 제거[m
[32m+[m[32m        preview_layout.setSpacing(0)  # 간격 제거[m
 [m
         # Preview label[m
         self.preview_label = QLabel('The preview will be displayed here after capture')[m
         self.preview_label.setAlignment(Qt.AlignCenter)[m
         self.preview_label.setStyleSheet("color: #888888; font-size: 16px;")[m
[31m-        self.preview_label.setMinimumHeight(420)  # 280 * 1.5 = 420[m
[32m+[m[32m        self.preview_label.setMinimumHeight(360)  # 16:9 비율에 맞게 설정[m
         [m
[31m-        # 고정 크기 정책으로 설정 - 이미지에 맞게 늘어나지 않음[m
[31m-        self.preview_label.setSizePolicy(QSizePolicy.Ignored, QSizePolicy.Ignored)[m
[32m+[m[32m        # 레이블 크기 정책 설정 - 컨테이너를 채우도록 설정[m
[32m+[m[32m        self.preview_label.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)[m
         [m
         # 텍스트 줄바꿈 활성화[m
         self.preview_label.setWordWrap(True)[m
         [m
[32m+[m[32m        # 레이블 배경색 설정[m
[32m+[m[32m        self.preview_label.setAutoFillBackground(True)[m
[32m+[m[41m        [m
         preview_layout.addWidget(self.preview_label)[m
 [m
         # Add preview frame[m
[36m@@ -475,7 +481,7 @@[m [mclass CaptureUI(QMainWindow):[m
             # 레이블 최대 크기 가져오기[m
             label_size = self.preview_label.size()[m
             [m
[31m-            # 레이블 크기에 맞게 이미지 스케일링[m
[32m+[m[32m            # 레이블 크기에 맞게 이미지 스케일링 (꽉 차게 표시)[m
             scaled_pixmap = pixmap.scaled([m
                 label_size.width(),[m
                 label_size.height(),[m
[36m@@ -485,7 +491,7 @@[m [mclass CaptureUI(QMainWindow):[m
             [m
             # 스케일링된 이미지 설정[m
             self.preview_label.setPixmap(scaled_pixmap)[m
[31m-            self.preview_label.setStyleSheet("")  # 스타일 초기화[m
[32m+[m[32m            self.preview_label.setStyleSheet("background-color: black;")  # 검은색 배경 추가[m
             [m
             # 콘솔에 디버깅 정보 출력[m
             print(f"원본 이미지 크기: {pixmap.width()}x{pixmap.height()}, "[m
[36m@@ -494,7 +500,7 @@[m [mclass CaptureUI(QMainWindow):[m
         else:[m
             # 이미지를 찾을 수 없는 경우[m
             self.preview_label.setText('Cannot load image')[m
[31m-            self.preview_label.setStyleSheet("color: #888888; font-size: 16px;")[m
[32m+[m[32m            self.preview_label.setStyleSheet("color: #888888; font-size: 16px; background-color: white;")[m
 [m
     def set_save_path(self):[m
         """Set save path"""[m
[36m@@ -549,6 +555,17 @@[m [mclass CaptureUI(QMainWindow):[m
         [m
         # 부모 클래스의 resizeEvent 호출[m
         super().resizeEvent(event)[m
[32m+[m[41m        [m
[32m+[m[32m    def changeEvent(self, event):[m
[32m+[m[32m        """창 상태가 변경될 때 호출되는 이벤트 핸들러"""[m
[32m+[m[32m        if event.type() == QEvent.WindowStateChange:[m
[32m+[m[32m            # 창이 최대화되거나 복원될 때 프리뷰 업데이트[m
[32m+[m[32m            if hasattr(self, 'last_capture_path') and self.last_capture_path and os.path.exists(self.last_capture_path):[m
[32m+[m[32m                # 약간의 지연 후 업데이트 (창 상태 변경이 완료된 후)[m
[32m+[m[32m                QTimer.singleShot(300, lambda: self.update_preview(self.last_capture_path))[m
[32m+[m[41m        [m
[32m+[m[32m        # 부모 클래스의 이벤트 핸들러 호출[m
[32m+[m[32m        super().changeEvent(event)[m
 [m
     def open_save_folder(self):[m
         """저장 폴더를 파일 탐색기로 엽니다."""[m
